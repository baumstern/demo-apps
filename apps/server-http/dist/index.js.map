{"version":3,"sources":["app.js","index.js"],"names":["http","require","sdk","client","HypercertClient","chain","id","content","config","html","graphUrl","app","Server","on","req","res","writeHead","write","end","_default","exports","default","_app","_interopRequireDefault","obj","__esModule","port","listen","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMC,GAAG,GAAGD,OAAO,CAAC,qBAAqB,CAAC;AAE1C,MAAME,MAAM,GAAG,IAAID,GAAG,CAACE,eAAe,CAAC;EAAEC,KAAK,EAAE;IAAEC,EAAE,EAAE;EAAS;AAAE,CAAC,CAAC;AAEnE,MAAMC,OAAO,GAAG,MAAAA,CAAA,KAAY;EAC1B,MAAM;IAAEC;EAAO,CAAC,GAAGL,MAAM;EAEzB,MAAMM,IAAI,GAAI;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAUD,MAAM,CAACE,QAAS;AAC1B;AACA,UAAU;EAER,OAAOD,IAAI;AACb,CAAC;AAED,MAAME,GAAG,GAAG,IAAIX,IAAI,CAACY,MAAM,CAAC,CAAC;AAE7BD,GAAG,CAACE,EAAE,CAAC,SAAS,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EACpC,MAAMN,IAAI,GAAG,MAAMF,OAAO,CAAC,CAAC;EAC5BQ,GAAG,CAACC,SAAS,CAAC,GAAG,EAAE;IAAE,cAAc,EAAE;EAAY,CAAC,CAAC;EACnDD,GAAG,CAACE,KAAK,CAACR,IAAI,CAAC;EACfM,GAAG,CAACG,GAAG,CAAC,IAAI,CAAC;AACf,CAAC,CAAC;AAAC,IAAAC,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEYV,GAAG;;;;AChClB,IAAAW,IAAA,GAAAC,sBAAA,CAAAtB,OAAA;AAA2B,SAAAsB,uBAAAC,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAH,OAAA,EAAAG,GAAA;AAE3B,MAAME,IAAI,GAAG,MAAM;AAEnBf,YAAG,CAACgB,MAAM,CAACD,IAAI,EAAE,MAAM;EACrBE,OAAO,CAACC,GAAG,CAAE,+BAA8BH,IAAK,KAAI,CAAC;AACvD,CAAC,CAAC","file":"index.js","sourceRoot":"../src","sourcesContent":["const http = require(\"http\");\r\nconst sdk = require(\"@hypercerts-org/sdk\");\r\n\r\nconst client = new sdk.HypercertClient({ chain: { id: 11155111 } });\r\n\r\nconst content = async () => {\r\n  const { config } = client;\r\n\r\n  const html = `<!DOCTYPE html>\r\n  <html lang=\"en\">\r\n  <head>\r\n    <title>A JavaScript project</title>\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n  </head>\r\n  <body>\r\n    <h1>A JavaScript project</h1>\r\n    <h2>${config.graphUrl}</h2>\r\n  </body>\r\n  </html>`;\r\n\r\n  return html;\r\n};\r\n\r\nconst app = new http.Server();\r\n\r\napp.on(\"request\", async (req, res) => {\r\n  const html = await content();\r\n  res.writeHead(200, { \"Content-Type\": \"text/html\" });\r\n  res.write(html);\r\n  res.end(\"\\n\");\r\n});\r\n\r\nexport default app;\r\n","import app from \"./app.js\";\r\n\r\nconst port = \"8888\";\r\n\r\napp.listen(port, () => {\r\n  console.log(`Server is listening on port ${port}...`);\r\n});\r\n"]}